# Generated by Django 3.2.10 on 2021-12-17 21:34

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations

from core_main_app.settings import MONGODB_INDEXING
from core_main_app.utils.databases.backend import uses_postgresql_backend


class Migration(migrations.Migration):

    dependencies = [
        ("core_oaipmh_harvester_app", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="oairecord",
            name="vector_column",
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddIndex(
            model_name="oairecord",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["vector_column"], name="core_oaipmh_vector__7042d7_gin"
            ),
        ),
    ]
    if uses_postgresql_backend() and not MONGODB_INDEXING:
        operations.append(
            migrations.RunSQL(
                sql="""
                  CREATE TRIGGER oai_vector_column_trigger
                  BEFORE INSERT OR UPDATE OF dict_content, vector_column
                  ON core_oaipmh_harvester_app_oairecord
                  FOR EACH ROW EXECUTE PROCEDURE
                  update_dict_content_tsvector();
                  UPDATE core_oaipmh_harvester_app_oairecord SET vector_column = NULL;
                """,
                reverse_sql="""
                  DROP TRIGGER IF EXISTS oai_vector_column_trigger
                  ON core_oaipmh_harvester_app_oairecord;
                """,
            )
        )
